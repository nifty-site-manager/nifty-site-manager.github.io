<!-- Main -->
<section id="main" class="wrapper style2">
	<div class="title">Markdown</div>
	<div class="container">
		<!-- Features -->
		<section id="features">
			<header class="style1">
				<h2>How to use markdown on your websites</h2>
			</header>

			<div class="content" style="margin-top:-50px;">
				<center>
					<img src="@pathtofile(site/images/markdown.svg)" alt="Markdown logo" width=250 style="margin-bottom:20px">
				</center>

				<p>
					An excellent way to pre-render (aka convert) markdown to html at build-time on your websites is to use <a href="https://pandoc.org/">pandoc</a>. If you have pandoc installed on your machine it is as simple as using, without any indenting, <mono>\@system("pandoc file-path")</mono> where <mono>file-path</mono> is the path to the markdown file you want converted. 
				</p>

				<p>
					For more information on using Pandoc, like converting from and to other markup languages, check out the <a href="https://pandoc.org/MANUAL.html">Pandoc User's Guide</a>.
				</p>

				<p>
					<b>Note:</b> changes to the markdown file will not be recognised by build-updated unless you manually add it as a user-defined page dependency. See the <a href="@pathto(docs/nift_commands)">Nift commands</a> page for how to manually add user-defined page dependencies.
				</p>

				<p>
					Options for converting markdown to html at load-time on your websites include:
					<ul style="text-indent:30px">
						<li><a href="http://showdownjs.com/">Showdown</a></li>
						<li><a href="https://marked.js.org">Marked.js</a></li>
						<li><a href="https://github.com/markdown-it/markdown-it">markdown-it</a></li>
					</ul>
				</p>

				<p>
					The <mono>Nift</mono> documentation covers using markdown on your websites using <a href="http://showdownjs.com/">Showdown</a>, for a basic example see the <a href="@pathto(resources/templates)">template</a> <mono>markdown-site</mono>. To use <mono>Showdown</mono> on your websites you will need <mono>showdown.js</mono> or <mono>showdown.min.js</mono> (you can get v1.9.0 from <a href="https://gitlab.com/nsm-templates/markdown-site/blob/master/site/js/showdown.min.js">here</a>) along with <a href="https://gitlab.com/nsm-templates/markdown-site/blob/master/site/js/process_md_blocks.js">process_md_blocks.js</a> script. 
				</p>

				<p>
					To use the <mono>Showdown</mono> add includes for the above scripts along with <mono>Showdown</mono> scripts to the end of your <mono>\<body\></mono>. For example a <mono>page.template</mono> file might be:

					<div align="center">
<pre class="prettyprint lang-html linenums">
<!DOCTYPE html>
<html>
	<head>
		<title>site title - \@[title]</title>
	</head>
				
	<body>
		\@content()

		<script src='\@pathtofile(site/js/process_md_blocks.js)'></script>
		<script src="\@pathtofile(site/js/showdown.min.js)"></script>
		<script>
			var converter = new showdown.Converter();
			converter.setOption('tables', 'on');
			converter.setOption('strikethrough', 'on');
			converter.setOption('emoji', 'on');
			elements = document.getElementsByClassName('markdown');
			for(var i=0; i<elements.length; i++)
				elements[i].innerHTML = converter.makeHtml(elements[i].innerHTML.replace(/&amp;lt;/g, "xwxw").replace(/&amp;gt;/g, "pqpq")).replace(/xwxw/g, "&amp;lt;").replace(/pqpq/g, "&amp;gt;");
		</script>
	</body>
</html>
</pre>
					</div>
				</p>

				<p>
					It's also handy to add the following bit of css to one of your css files to hide visibility of textareas when pages are loading:

					<div align="center">
<pre class="prettyprint lang-css linenums">
textarea.markdown
{
	visibility: hidden;
}

pre.markdown
{
	visibility: hidden;
}
</pre>
					</div>
				</p>

				<p>
					You can then do a block of markdown as follows:

					<div align="center">
<pre class="prettyprint lang-html linenums">
<textarea class="markdown">
	markdown code here
</textarea>
</pre>
					</div>
				</p>

				<h4>Examples of using markdown</h4>

				<textarea class="markdown">
					See [here](https://github.com/showdownjs/showdown/wiki/Showdown's-Markdown-syntax) for documentation on Showdown's markdown syntax, and [here](https://github.com/showdownjs/showdown#setting-options) for documentation on Showdown options. 
				</textarea>

				<textarea class="markdown">
					To use emojis you need to enable the **"emoji"** option, then emojis are eg. `:smile:`, `:+1:`, `:bacon:` and `:zap:` for :smile:, :+1:, :bacon: and :zap:. See [here](https://github.com/showdownjs/showdown/wiki/emojis) for a list of Showdown supported emojis.
				</textarea>

				<textarea class="markdown">
					1. You can make text *italic* by surrounding it with \\*, eg. \\*text\\*. 
					2. You can make text **bold** by surrounding it with \\*\\*, eg. \\*\\*text\\*\\*. 
					2. You can make text ~~strikethrough~~ by surrounding it with \~\~, eg. \~\~text\~\~. 
				</textarea>

				<textarea class="markdown">
					You can do unordered lists using \*, \- or \+, Eg.:
					* list item 1
					- list item 2
					+ list item 3

					You can do ordered lists using 1., 2., 3., etc., Eg.:
					1. list item 1
					2. list item 2
					3. list item 3
				</textarea>

				<textarea class="markdown">
					You can do links using **\[text\]\(url\)**. You can do images using **\[alt text\]\(img url\)**.
				</textarea>

				<textarea class="markdown">
					Tables aren't part of the core Markdown spec, but they are part of GFM and Showdown supports them by turning on the option **tables**.

					Colons can be used to align columns.

					In the new version, the outer pipes (|) are optional, matching GFM spec.

					You also don't need to make the raw Markdown line up prettily.

					You can also use other markdown syntax inside them.

					The following table:

					| Tables        | Are           | Cool  |
					| ------------- |:-------------:| -----:|
					| **col 3 is**  | right-aligned | $1600 |
					| col 2 is      | *centered*    |   $12 |
					| zebra stripes | ~~are neat~~  |    $1 |

					is generated using
				</textarea>

				<center>
<pre class="prettyprint lang-markdown inline">
| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| **col 3 is**  | right-aligned | $1600 |
| col 2 is      | *centered*    |   $12 |
| zebra stripes | ~~are neat~~  |    $1 |
</pre>
				</center> <br><br>

				<textarea class="markdown">
					You can do inline code by surrounding the code with \`, eg `print("hello, world!")`.
				</textarea>

				<textarea class="markdown">
					To do a code block just indent by 4 spaces preceded by an empty line, for example:

						#include <cstdio>
						#include <iostream>

						int main()
						{
							std::cout << "hello, world!" << std::endl;

							return 0;
						}
				</textarea>
			</div>
		</section>
	</div>
</section>
