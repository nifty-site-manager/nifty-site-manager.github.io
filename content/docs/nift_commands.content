<!-- Main -->
<section id="main" class="wrapper style2">
	<div class="title">Nift Commands</div>
	<div class="container">
		<!-- Features -->
		<section id="features">
			<header class="style1">
				<h2>Available Nift commands</h2>
			</header>

			<!-- Image -->
			<center>
				<img src="@pathtofile(site/images/devil.png)" width=300 style="margin-bottom:40px">
			</center>

			<div class="content">
				<p>
					<mono>Nift</mono> has a number of commands you can use that will help you manage and generate your websites. This page outlines how to list all the available commands and outlines what most of them do.
				</p>

				<p>
					To use a command, enter <mono>nsm <i>command</i> <i>parameter-1</i> ... <i>parameter-n</i></mono> in to a terminal, command prompt or power shell window. 
				</p>

				<h4>
					Listing available <mono>Nift</mono> commands
				</h4>

				<p>
					To list available <mono>Nift</mono> commands run <mono>nsm commands</mono>. The list will look similar to:

					<div align="center">
<pre class="inline rounded">
+------ available commands ----------------------------------------+
| commands       | lists all nsm commands                          |
| config         | list config settings or set git email/username  |
| clone          | input: clone-url                                |
| diff           | input: file-path                                |
| pull           | pull remote changes locally                     |
| init           | initialise managing a site - input: (site-name) |
| status         | lists updated and problem pages                 |
| info           | input: page-name-1 .. page-name-k               |
| info-all       | lists tracked pages                             |
| info-names     | lists tracked page names                        |
| track          | input: page-name (page-title) (template-path)   |
| untrack        | input: page-name                                |
| rm or del      | input: page-name                                |
| mv or move     | input: old-name new-name                        |
| cp or copy     | input: tracked-name new-name                    |
| build          | input: page-name-1 .. page-name-k               |
| build-updated  | builds updated pages                            |
| build-all      | builds all tracked pages                        |
| serve          | serves website locally                          |
| bcp            | input: commit-message                           |
| new-title      | input: page-name new-title                      |
| new-template   | input: page-name template-path                  |
+------------------------------------------------------------------+
</pre>
					</div>
				</p>

				<h4>
					Importing/Forking, renaming and cloning a site repository from BitBucket/GitHub/GitLab
				</h4>

				<p>
					You can import/fork and rename an existing site repository on BitBucket, GitHub or GitLab, then clone it using <mono>nsm clone <i>repository-url</i></mono>. Note - You can rename a repository when importing it, rather than forking and renaming, plus on BitBucket and GitHub you cannot remove fork relationships. Also on GitHub you will need to go in to the site repository's settings, find the GitHub Pages section and set the source branch (typically <mono>master branch</mono>).
				</p>

				<h4>
					Diff of file since last commit
				</h4>

				<p>
					If your project directory is a Git repository you can get the diff of a file using <mono>nsm diff file-path</mono> where <mono>file-path</mono> is the path from the project root directory to the file you want the diff of.
				</p>

				<h4>
					Pulling remote changes locally
				</h4>

				<p>
					If your project directory is a Git repository you can pull remote changes locally using <mono>nsm pull</mono>
				</p>

				<h4>
					Initialise managing a site
				</h4>

				<p>
					To start managing a site: first change to the directory you would like to act as the site stage, that is the directory containing all site related files (content and template files inclusive); then run <mono>nsm init (site-name)</mono> where <mono>site-name</mono> is an optional parameter for the name of the site. A hidden directory <mono>.siteinfo</mono> will be created containing a <mono>pages.list</mono> file and config file <mono>nsm.config</mono>.
				</p>

				<p>
					<u>Note:</u> once the stage directory for your site is set up, much the same as with git, <mono>Nift</mono> may be run from any directory within the stage directory (stage directory inclusive).
				</p>

				<h4>
					Listing updated pages
				</h4>

				<p>
					For information on pages that need building and why run <mono>nsm status</mono>.
				</p>

				<h4>
					Tracking new pages
				</h4>

				<p>
					To track a new page run <mono>nsm track page-name page-title template-path</mono>, where <mono>page-title</mono> and <mono>template-path</mono> are optional (default <mono>page-title</mono> is the specified <mono>page-name</mono>, and default <mono>template-path</mono> is <mono>template/page.template</mono>). Surround any titles and/or paths containg spaces with single or double quotes. If you want both spaces and single/double quotes in your title/path then surround it by double/single quotes. 
				</p>

				<p>
					The following should (hopefully) work as valid titles and paths (though if you are going to use spaces/quotes in titles/paths, test it thoroughly before depending on it working):

					<div align="center">
<pre class="inline rounded">
home
"home"
"home page"
"nick's page"
'"quoted title"'
</pre>

<pre class="inline rounded">
content/index.content
./content/index.content
content/'index'.content
"content/index.content"
'content/index page.content'
</pre>
					</div>
				</p>

				<p>
					<u>Note:</u> tabs and multiple spaces will currently be morphed into single spaces. If the available options for titles/paths are not flexible enough then ask and I can alter how titles/paths are read.
				</p>

				<h4>
					Listing tracked pages
				</h4>

				<p>
					To list information on all pages run <mono>nsm info-all</mono>, for just page names run <mono>nsm info-names</mono>, and for information on specific pages run <mono>nsm info page-name-1 .. page-name-k</mono>.
				</p>

				<h4>
					Untracking pages
				</h4>

				<p>
					To untrack a page run <mono>nsm untrack page-name</mono>. All information about the page is removed from <mono>.siteinfo/pages.list</mono> along with the page file and the page info file. It is up to you whether you want to manually remove any associated content and/or template files.
				</p>

				<h4>
					Moving pages
				</h4>

				<p>
					To move a page run <mono>nsm mv old-page-name new-page-name</mono>. All information about the old-page is removed from <mono>.siteinfo/pages.list</mono> along with the old page file and the old page info file, while information about the new page is added to <mono>.siteinfo/pages.list</mono> and the old content file is moved to the new content path.
				</p>

				<h4>
					Copying pages
				</h4>

				<p>
					To copy a page run <mono>nsm cp tracked-page-name new-page-name</mono>. Information about the new page is added to <mono>.siteinfo/pages.list</mono> and the old content file is copied to the new content path.
				</p>

				<h4>
					Removing pages
				</h4>

				<p>
					To remove a page run <mono>nsm rm page-name</mono>. The only difference to <mono>untrack</mono> is that the content file will also be removed from your system.
				</p>

				<h4>
					Building pages
				</h4>

				<p>
					To build updated pages run <mono>nsm build-updated</mono>, to build all pages run <mono>nsm build-all</mono>, and to build specific pages run <mono>nsm build page-name-1 .. page-name-k</mono>.
				</p>

				<h4>
					Building, committing and pushing changes to BitBucket/GitHub/GitLab
				</h4>

				<p>
					If your site is part of a repository for BitBucket, GitHub or GitLab you can have updated pages built along with the changes being committed and pushed using <mono>nsm bcp "commit message"</mono>. Note you can still use <mono>nsm build-updated</mono> to check any changes locally (when changes can be viewed locally). 
				</p>

				<h4>
					Serving Your Website Locally
				</h4>

				<p>
					To serve your website locally run <mono>nsm serve</mono>, enter <mono>exit</mono> to stop serving your website. On linux can also run <mono>nsm serve -s &</mono> to serve in the background then to stop serving run <mono>killall nsm</mono>. Then you can open the webpages in the <mono>site</mono> directory and Nift will automatically build the website in the background, picking up any changes, just reload your browser window. 
				</p>

				<p>
					If you would like your website to be served at an IP address, eg. if you are using Nift on a server, try using Python. Run either of the following in the project root directory for a url similar to <mono>0.0.0.0:8000/site</mono> and from the site directory for a url similar to <mono>0.0.0.0:8000</mono>:

					<div align="center">
<pre class="inline">
python3 -m http.server 8000
</pre>
					</div>

					<div align="center">
<pre class="inline">
python -m SimpleHTTPServer
</pre>
					</div>
				</p>

				<p>
					If you want live reloading check out <a href="https://github.com/tapio/live-server">Live Server</a> which you can get from <mono>npm</mono>, or <a href="http://livereload.com/">Live Reload</a>. In either case you can add them to <a href="@pathto(docs/scripts)">pre/post serve scripts</a> for your website so that it is all integrated in to the Nift serve command and requires no manual effort on your part.
				</p>

				<h4>
					Changing a page title or template path
				</h4>

				<p>
					To set a new page title run <mono>nsm new-title page-name new-title</mono> and to set a new template path run <mono>nsm new-template new-template-path</mono>.
				</p>

				<h4>
					What information is tracked for a page?
				</h4>

				<p>
					While <mono>Nift</mono> is easiest to learn and understand by using, users may find it useful to remember that for each page <mono>Nift</mono> tracks a page name, page title and template path. In more detail, a list of pages is stored in the file <mono>.siteinfo/pages.list</mono> from where <mono>Nift</mono> is initialised. When building a page, say <mono>index</mono>, a page info file is created that stores information about page dependencies. 
				</p>

				<h4>
					What is a page dependency?
				</h4>

				Anything that when modified requires a page to be built, including:
				<ul>
					<li>changes to information about a tracked page; and</li>
					<li>modifications to content files and/or template files.</li>
				</ul>

				<p>
					<u>Note:</u> the modification/removal of a page file is intentionally not considered a page dependency. This is so that, should the user want to, pages may be moved (not just copied) outside the stage directory without <mono>Nift</mono> thinking the pages need to be built when in fact they do not.
				</p>

				<h4>
					How does <mono>Nift</mono> track modifications to page dependencies?
				</h4>

				<p>
					The information stored in a page information file represents the information from the last time the page was built. If the information file does not exist, as far as <mono>Nift</mono> is concerned the page has never been built. It will compare both: the page information from the info file against the information in <mono>.siteinfo/pages.list</mono>; and whether any of the content and/or template files have been modified since the page info file was modified, and hence since the page was last built.
				</p>

				<p>
					While <mono>Nift</mono> will not pick up the existence of new content files that are merely added via other content files, in order for this to occur a content file which is already recorded as a page dependency must be modified. Consequently <mono>Nift</mono> will inform the user that any relevant pages require building, and upon the user building updated pages any new content files will also be recorded as page dependencies.
				</p>
			</div>
		</section>
	</div>
</section>
