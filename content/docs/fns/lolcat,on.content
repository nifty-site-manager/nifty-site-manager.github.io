<!-- Main -->
<section id="main" class="wrapper style2">
	<div class="title">fn: <mono>lolcat.on</mono></div>
	<div class="container">
		<!-- Features -->
		<section id="features">
			<div class="content">
				<a href="#contents" class="to-top">[contents]</a>

				<h4 id="contents">
					Contents
				</h4>
				<ul>
					<li><a href="#syntax">Syntax</a></li>
					<li><a href="#description">Description</a></li>
					<li><a href="#config">Config</a></li>
					<li><a href="#f++-eg">f++ example</a></li>
					<li><a href="#n++-eg">n++ example</a></li>
				</ul>

				<!-- Image -->
				<center>
					<img src="@pathtofile(site/images/laptop-nift.png)" alt="Nift console screenshot" width="600px" style="max-width:90%; border-radius:20px; margin-bottom: 60px">
				</center>

				<h4 id="syntax">
					Syntax
				</h4>
				<p>
					The syntax for <mono>lolcat.on</mono> calls is:
<div align="center" style="margin-top:-15px">
<mono>f++</mono>: &nbsp; <pre class="prettyprint inline" style="margin-bottom:-15px">
lolcat.on
lolcat.on(string)
</pre>
</div><br>
<div align="center">
<mono>n++</mono>: &nbsp; <pre class="prettyprint inline" style="margin-bottom:-15px">
\@lolcat.on
\@lolcat.on(string)
</pre>
</div>
				</p>

				<h4 id="description">
					Description
				</h4>
				<p>
					The <mono>lolcat.on</mono> function is for turning on outputting text to the console with rainbow colours, it takes zero parameters or a single parameter. For internal output <mono>Nift</mono> uses the in-built version of <a href="">lolcat-cc</a>, however you can specify in the global and project <a href="@pathto(docs/cmds/lolcat)">configuration</a> files which external <mono>lolcat</mono> program to use, depending on your preferences for things like speed and/or being able to watch animations, and possible formatting issues for edge cases like emojis.
				</p>

				<p>
					<b>Note:</b> There is a modified version of my <a href="https://github.com/n-ham/lolcat-cc">lolcat-cc</a> in-built in to Nift which has a taste of what other platforms can do for Windows, however you can use <mono>lolcat.on</mono> with quite a few different <mono>lolcat</mono> implementations installed on your machine. It is available for:
					<ul>
						<li>FreeBSD (<a href="https://www.freshports.org/games/lolcat">ports</a>, <a href="https://github.com/jaseg/lolcat">fast C implementation</a>)</li>
						<li style="margin-top: 10px">Linux (<a href="https://snapcraft.io/lolcat-c"><img src="@pathtofile(site/images/snap-icon.png)" width="30px" style="vertical-align:middle; margin-bottom:5px"></a>, <a href="https://aur.archlinux.org/packages/c-lolcat"><img src="@pathtofile(site/images/arch.svg)" width="30px" style="vertical-align:middle; margin-bottom:5px"></a>, <a href="https://packages.ubuntu.com/eoan/lolcat"><img src="@pathtofile(site/images/ubuntu.svg)" width="30px" style="vertical-align:middle; margin-bottom:5px"></a>, <a href="https://pypi.org/project/lolcat/"><img src="@pathtofile(site/images/python.svg)" width="30px" style="vertical-align:middle; margin-bottom:5px"></a>, <a href="https://snapcraft.io/lolcat-rs">Rust implementation</a>)</li>
						<li>OSX (<a href="https://formulae.brew.sh/formula/lolcat"><img src="@pathtofile(site/images/brew-icon.png)" width="30px" style="vertical-align:middle; margin-bottom:5px"></a>, <a href="https://pypi.org/project/lolcat/"><img src="@pathtofile(site/images/python.svg)" width="30px" style="vertical-align:middle; margin-bottom:5px"></a>, <a href="https://github.com/jaseg/lolcat">fast C implementation</a>)</li>
					</ul>
				</p>

				<p>
					<b>Note:</b> <mono>Nift</mono> will skip to the first non-whitespace (ie. to the first character that is not a space, tab or newline) after a <mono>lolcat.on</mono> call and inject it to the output file where the call started. If you want to prevent <mono>Nift</mono> from doing this put a '<mono>!</mono>' after the call, eg.:
<div align="center">
<pre class="prettyprint inline lang-nift">
\@lolcat.on()!
</pre>
</div>
				</p>

				<h4 id="config">
					Config
				</h4>
				
				<p>
					You can configure lolcat output bein turned on automatically when running scripts, using <zapfont style = "font-size:30px;">FLASHELL</zapfont>, the other shell extensions and the interpreters by adding the following to the global and project config files:

					<ul>
						<li>lolcat 1</li>
						<li>lolcatCmd "lolcat-cc -f"</li>
					</ul>

					<b>Note:</b> you can use any <mono>lolcat</mono> program you want provided the command is set properly. The in-built version of lolcat for example does not handle animations like Star Wars very well but is faster than the others. Some may like to watch all the way through with the in-built version of <mono>lolcat-cc</mono> and see what happens, or just use the original version of lolcat to terminal star wars in rainbow mode. 
				</p>

				<h4 id="f++-eg">
					f++ example
				</h4>
				<p>
					Example of <mono>lolcat.on</mono> being used with <mono>f++</mono>:					

<div align="center">
<pre class="prettyprint inline linenums lang-nift">
:=(int, i=12)
:=(string, str="hello")
lolcat.on
console.lock
console("i: ", i)
console(str, ", world!")
console("first line", endl, "second line")
console{block}
{
	first line
	second line
	third line
}
console.unlock
lolcat.off</pre>
</div>
				</p>

				<h4 id="n++-eg">
					n++ example
				</h4>
				<p>
					Example of <mono>lolcat.on</mono> being used with <mono>n++</mono>:					

<div align="center">
<pre class="prettyprint inline linenums lang-nift">
\@:=(int, i=12)
\@:=(string, str="hello")
\@lolcat.on
\@console.lock
\@console("i: ", i)
\@console(str, ", world!")
\@console("first line", endl, "second line")
\@console{block}
{
	first line
	second line
	third line
}
\@console.unlock
\@lolcat.off</pre>
</div>
				</p>

				<center>
					<img src="@pathtofile(site/images/lolcat-cc.png)" alt="lolcat-cc mascot" width="400px">
				</center>
			</div>
		</section>
	</div>
</section>
