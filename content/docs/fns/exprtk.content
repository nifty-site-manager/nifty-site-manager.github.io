<!-- Main -->
<section id="main" class="wrapper style2">
	<div class="title">fn: <mono>exprtk</mono></div>
	<div class="container">
		<!-- Features -->
		<section id="features">
			<div class="content">
				<a href="#contents" class="to-top">[contents]</a>

				<h4 id="contents">
					Contents
				</h4>
				<ul>
					<li><a href="#syntax">Syntax</a></li>
					<li><a href="#description">Description</a></li>
					<li><a href="#options">Options</a></li>
					<li><a href="#f++-eg">f++ example</a></li>
					<li><a href="#n++-eg">n++ example</a></li>
				</ul>

				<h4 id="syntax">
					Syntax
				</h4>
				<p>
					The syntax for <mono>exprtk</mono> calls is:
<div align="center" style="margin-top:-15px; margin-bottom:80px">
<mono>f++</mono>: &nbsp; <pre class="prettyprint inline" style="margin-bottom:-70px">
\$`expression`
exprtk{options}(expression)
exprtk{f, options}(file-path)
exprtk{options}
{
	//block of ExprTk code
}
</pre>
</div><br>
<div align="center" style="margin-top:-15px; margin-bottom:80px">
<mono>n++</mono>: &nbsp; <pre class="prettyprint inline" style="margin-bottom:-70px">
\$`expression`
\@exprtk{options}(expression)
\@exprtk{f, options}(file-path)
\@exprtk{options}
{
	//block of ExprTk code
}
</pre>
</div>
				</p>

				<h4 id="description">
					Description
				</h4>
				<p>
					The <mono>exprtk</mono> function is for <u>compiling and evaluating <mono>ExprTk</mono> expressions</u>, it takes zero parameters with the call followed by a block of <mono>ExprTk</mono> code to compile and evaluate otherwise a single parameter that should be a file-path to <mono>ExprTk</mono> code to compile and run (you need to specify the option to use a file). See <a href="@pathtopage(docs/exprtk)">here</a> for more information about <mono>ExprTk</mono>.
				</p>

				<p>
					<b>Note:</b> The preceding <mono>$</mono> has only been added since <mono>v2.3.13</mono>, primarily so that <mnstr style="font-size:18px">functionstein</mnstr> works better as an extension language, in particular with <zapfont style = "font-size:30px;">FLASHELL</zapfont> working as a shell extension.
				</p>

				<h4 id="options">
					Options
				</h4>
				<p>
					The following options are available for <mono>exprtk</mono> calls:

					<center class="table">
						<table id="ExprTk_options_table" class="alt">
							<thead>
								<tr>
									<th>option</th>
									<th>description</th>
								</tr>
							</thead>
							<tr>
								<td><mono>f/file</mono></td>
								<td>param specifies file-path</td>
							</tr>
							<tr>
								<td><mono>f++</mono></td>
								<td>use <mono>f++</mono> if parsing block</td>
							</tr>
							<tr>
								<td><mono>n++</mono></td>
								<td>use <mono>n++</mono> if parsing block</td>
							</tr>
							<tr>
								<td><mono>!o</mono></td>
								<td>do not return output</td>
							</tr>
							<tr>
								<td><mono>o</mono></td>
								<td>return output</td>
							</tr>
							<tr>
								<td><mono>pb</mono></td>
								<td>parse block with language call is made from before compiling and evaluating with <mono>ExprTk</mono></td>
							</tr>
							<tr>
								<td><mono>!round</mono></td>
								<td>do not round value of <mono>ExprTk</mono> expression</td>
							</tr>
							<tfoot>
								<tr>
									<th>option</th>
									<th>description</th>
								</tr>
							</tfoot>
						</table>
					</center>
				</p>

				<h4 id="f++-eg">
					f++ example
				</h4>
				<p>
					Examples of <mono>exprtk</mono> being used with <mono>f++</mono>:					

<div align="center">
<pre class="prettyprint inline linenums">
\$`var x:=0; nsm_write(console, x, endl)`
exprtk
{
	var x:=0; 
	nsm_write(console, x, endl);
}
exprtk("./path.exptk")
exprtk.add_package(basicio_package)
exprtk
{
	for(var i:=0; i<10; i+=1)
	{
		println('i: ', i);
	}
}
int x = \$`2^2 + 3*8 + 4`
console(x)</pre>
</div>
				</p>

				<h4 id="n++-eg">
					n++ example
				</h4>
				<p>
					Example of <mono>exprtk</mono> being used with <mono>n++</mono>:					

<div align="center">
<pre class="prettyprint inline linenums">
\$`var x:=0; nsm_write(console, x, endl)`
\@exprtk
{
	var x:=0; 
	nsm_write(console, x, endl);
}
\@exprtk("./path.exprtk")
\@exprtk.add_package(basicio_package)
\@exprtk
{
	for(var i:=0; i<10; i+=1)
	{
		println('i: ', i);
	}
}
\@int(x = \$`2^2 + 3*8 + 4`)
\@console(x)</pre>
</div>
				</p>
			</div>
		</section>
	</div>
</section>
