<!-- Main -->
<section id="main" class="wrapper style2">
	<div class="title">Functions</div>
	<div class="container">
		<!-- Features -->
		<section id="features">
			<header class="style1">
				<h2>Index for Nift's hard-coded functions</h2>
			</header>

			<!-- Image -->
			<center>
				<img src="@pathtofile(site/images/badger-icon.svg)" alt="Nift's badger mascot" width=300 style="margin-bottom:40px">
			</center>

			<div class="content">

				<h4>
					Introduction
				</h4>
				<p>
					Nift has its own poweful in-built template language <a href="@pathtopage(docs/n++)">n++</a> which you can use in amongst any other scripting, programming and/or template language you want. It also has its own in-built scripting language <a href="@pathtopage(docs/f++)">f++</a> which also works well in interactive <mono>shell</mono> mode as a shell extension. This page is an index for all the functions available with the template language <mono>n++</mono> and scripting/shell extension language <mono>f++</mono>.
				</p>

				<h4 id="contents">
					Contents
				</h4>
				<div style="text-indent:30px; margin-top:10px">
					<ul>
						<li><a href="#syntax">Syntax</a></li>
						<li><a href="#options">Options</a></li>
						<li><a href="#index">Index</a></li>
					</ul>
				</div>

				<h4 id="syntax">Syntax</h4>
				<p>
					The syntax for Nift function calls is as follows:
<div align="center" style="margin-top:-15px">
<mono>f++</mono>: &nbsp; <pre class="prettyprint inline lang-nift" style="margin-bottom:-19px">
funcName{options}(params)
</pre>
</div><br>
<div align="center">
<mono>n++</mono>: &nbsp; <pre class="prettyprint inline lang-nift" style="margin-bottom:-19px">
\@funcName{options}(params)
</pre>
</div>
				</p>

				<p>
					You can use Nift's template language with the function name, options and parameters for a function call. For example:
<div align="center" style="margin-top:-10px; margin-bottom:10px">
<pre class="prettyprint inline">\@input("\$[contentpath]")</pre>
</div>
				</p>

				<p>
					You can even expand multiple options or parameters when parsing the options or parameters string with both <mono>f++</mono> and <mono>n++</mono>. A contrived <mono>n++</mono> example that is equivalent to calling <mono>\@funcName(param 1, param2)</mono> is below:
<div align="center" style="margin-top:-10px; margin-bottom:10px">
<pre class="prettyprint inline">
\@string str = "param 1, param 2"
\@funcName(\$[str])
</pre>
</div>
				</p>

				<p>
					<b>Note:</b> you need to quote the function name when doing things like printing variables or calling functions in the function name. A contrived <mono>n++</mono> example is below:
<div align="center" style="margin-top:-10px; margin-bottom:10px">
<pre class="prettyprint inline">
\@string str = "input"
\@"\$[str]"("\$[contentpath]")
</pre>
</div>
				</p>

				<p>
					Nift is pretty good at working out when it does or does not need to parse things like the function name, options and/or parameters. If you insist on manually telling Nift to <u>not</u> parse the function name and parameters use the <mono>!p</mono> option. For example:
<div align="center" style="margin-top:-10px; margin-bottom:10px">
<pre class="prettyprint inline">
\@input("\@{!p}[contentpath]")
</pre>
</div>
				</p>
				<p>
					<b>Note:</b> For options and parameters (including variable names and values), you can use:
				</p>
				<div style="text-indent:30px; margin-top:-20px">
					<ul>
						<li><mono>\n</mono> for the newline character</li>
						<li><mono>\t</mono> for tabs (though normal tabs also work)</li>
						<li><mono>\\</mono> for <mono>\</mono></li>
						<li><mono>\'</mono> for <mono>'</mono></li>
						<li><mono>\"</mono> for <mono>"</mono></li>
					</ul>
				</div>

				<p>
					Function names, options and parameters (including variable names and values) can be unquoted, single quoted or double quoted, whichever is more convenient, integrates with the other programming, scripting and/or template languages you are using and/or has nice syntax highlighting with the extensions and editor(s) you are using. Also for functions that can take multiple parameters, parameters containing commas '<mono>,</mono>' should be quoted, there can also be other times that things need to be quoted, for example if you want to have equals <mono>'='</mono> in a variable name during its definition then it will need to be quoted (though will not need to be quoted when referenced). 
				</p>

				<h4 id="options">
					Options
				</h4>
				<p>
					The following options are available for almost all function calls:

					<center class="table">
						<table id="exprtk_nift_fns_table" class="alt">
							<thead>
								<tr>
									<th>option</th>
									<th>description</th>
								</tr>
							</thead>
							<tr>
								<td><mono>!p</mono></td>
								<td>do not parse parameters</td>
							</tr>
							<tr>
								<td><mono>!v</mono></td>
								<td>do not replace variables with their values</td>
							</tr>
							<tr>
								<td><mono>1p</mono></td>
								<td>treat parameter string as one parameter</td>
							</tr>
							<tfoot>
								<tr>
									<th>option</th>
									<th>description</th>
								</tr>
							</tfoot>
						</table>
					</center>
				</p>

				<a href="#index" class="to_top">[index]</a>
				<h4 id="index">Index</h4>
				<p id="index">
					Below is an index of Nift's hard-coded functions (including functions for defining variables, functions and structures/types) which can be called from <a href="@pathto(docs/f++)">f++</a> and <a href="@pathto(docs/n++)">n++</a>: 
				</p>
				<div style="text-indent:30px; margin-top:-20px">
					<ul>
						<li><a href="@pathtopage(docs/fns/exprtk)">`expression`</a> (evaluate ExprTk expression)</li>
						<li><a href="@pathtopage(docs/fns/!)">!</a> (not operator)</li>
						<li><a href="@pathtopage(docs/fns/!newline)">!\n</a> (special single-line comment)</li>
						<li><a href="@pathtopage(docs/fns/!=)">!=</a> (not equals operator)</li>
						<li><a href="@pathtopage(docs/fns/$)">$</a> (print variable)</li>
						<li><a href="@pathtopage(docs/fns/&&)">&&</a> (and operator)</li>
						<li><a href="@pathtopage(docs/fns/||)">||</a> (or operator)</li>
						<li><a href="@pathtopage(docs/fns/bsol)">\</a> (escape characters)</li>
						<li><a href="@pathtopage(docs/fns/:=)">:=</a> (define)</li>
						<li><a href="@pathtopage(docs/fns/=)">=</a> (assignment operator)</li>
						<li><a href="@pathtopage(docs/fns/==)">==</a> (equals to operator)</li>
						<li><a href="@pathtopage(docs/fns/<)">@ent(<)</a> (less than operator)</li>
						<li><a href="@pathtopage(docs/fns/HASH_)">#</a> (raw single-line comment)</li>
						<li><a href="@pathtopage(docs/fns/HASH--)">#--</a> (parsed multi-line comment)</li>
						<li><a href="@pathtopage(docs/fns/<HASH--)"><\#--</a> (raw multi-line comment)</li>
						<li><a href="@pathtopage(docs/fns/<=)">@ent(<)=</a> (less than or equals to operator)</li>
						<li><a href="@pathtopage(docs/fns/<--)">@ent(<)--</a> (remove added trailing whitespace)</li>
						<li><a href="@pathtopage(docs/fns/>)">@ent(>)</a> (greater than operator)</li>
						<li><a href="@pathtopage(docs/fns/>=)">@ent(>)=</a> (greater than or equals to operator)</li>
						<li><a href="@pathtopage(docs/fns/+)">+</a> (addition operator)</li>
						<li><a href="@pathtopage(docs/fns/++)">++</a> (pre-increment operator)</li>
						<li><a href="@pathtopage(docs/fns/+++)">+++</a> (post-increment operator)</li>
						<li><a href="@pathtopage(docs/fns/+=)">+=</a> (addition assignment operator)</li>
						<li><a href="@pathtopage(docs/fns/-)">-</a> (subtraction operator)</li>
						<li><a href="@pathtopage(docs/fns/--)">--</a> (pre-decrement operator)</li>
						<li><a href="@pathtopage(docs/fns/--divdiv)">--//</a> (parsed single-line comment)</li>
						<li><a href="@pathtopage(docs/fns/---)">---</a> (post-decrement operator)</li>
						<li><a href="@pathtopage(docs/fns/-->)">--></a> (skip whitespace)</li>
						<li><a href="@pathtopage(docs/fns/-=)">-=</a> (subtraction assignment operator)</li>
						<li><a href="@pathtopage(docs/fns/*)">*</a> (multiplication operator)</li>
						<li><a href="@pathtopage(docs/fns/*=)">*=</a> (multiplication assignment operator)</li>
						<li><a href="@pathtopage(docs/fns/div)">/</a> (division operator)</li>
						<li><a href="@pathtopage(docs/fns/divequal)">/=</a> (division assignment operator)</li>
						<li><a href="@pathtopage(docs/fns/div*)">/*</a> (raw multi-line comment)</li>
						<li><a href="@pathtopage(docs/fns/divdiv)">//</a> (raw single-line comment)</li>
						<li><a href="@pathtopage(docs/fns/MOD)">%</a> (mod operator)</li>
						<li><a href="@pathtopage(docs/fns/MOD=)">%=</a> (mod assignment operator)</li> <br>

						<li><a href="@pathtopage(docs/fns/break)">break</a></li> <br>

						<li><a href="@pathtopage(docs/fns/cd)">cd</a></li>
						<li><a href="@pathtopage(docs/fns/comments)"><i>comments</i></a></li>
						<li><a href="@pathtopage(docs/fns/console)">console</a></li>
						<li><a href="@pathtofile('site/docs/fns/console.lock.html')">console.lock</a></li>
						<li><a href="@pathtofile('site/docs/fns/console.locked.html')">console.locked</a></li>
						<li><a href="@pathtofile('site/docs/fns/console.unlock.html')">console.unlock</a></li>
						<li><a href="@pathtopage(docs/fns/const)">const</a></li>
						<li><a href="@pathtopage(docs/fns/content)">content</a></li>
						<li><a href="@pathtopage(docs/fns/continue)">continue</a></li>
						<li><a href="@pathtopage(docs/fns/cpy)">cpy</a></li>
						<li><a href="@pathtopage(docs/fns/cssinclude)">cssinclude</a></li> <br>

						<li><a href="@pathtopage(docs/fns/dep)">dep</a></li>
						<li><a href="@pathtopage(docs/fns/do-while)">do-while</a></li> <br>

						<li><a href="@pathtopage(docs/fns/ent)">ent</a></li>
						<li><a href="@pathtopage(docs/fns/error)">error</a></li>
						<li><a href="@pathtopage(docs/fns/exit)">exit</a></li>
						<li><a href="@pathtopage(docs/fns/exprtk)">exprtk</a></li>
						<li><a href="@pathtofile('site/docs/fns/exprtk.add_package.html')">exprtk.add_package</a></li> <br>

						<li><a href="@pathtopage(docs/fns/f++)">f++</a></li>
						<li><a href="@pathtopage(docs/fns/faviconinclude)">faviconinclude</a></li>
						<li><a href="@pathtopage(docs/fns/for)">for</a></li>
						<li><a href="@pathtopage(docs/fns/forget)">forget</a></li>
						<li><a href="@pathtopage(docs/fns/function)">function</a></li> <br>

						<li><a href="@pathtopage(docs/fns/getenv)">getenv</a></li>
						<li><a href="@pathtopage(docs/fns/getline)">getline</a></li> <br>

						<li><a href="@pathtopage(docs/fns/hash)">hash</a></li> <br>

						<li><a href="@pathtopage(docs/fns/if)">if</a></li>
						<li><a href="@pathtopage(docs/fns/imginclude)">imginclude</a></li>
						<li><a href="@pathtopage(docs/fns/in)">in</a></li>
						<li><a href="@pathtopage(docs/fns/include)">include</a></li>
						<li><a href="@pathtopage(docs/fns/input)">inject</a></li>
						<li><a href="@pathtopage(docs/fns/input)">input</a></li>
						<li><a href="@pathtopage(docs/fns/is_const)">is_const</a></li>
						<li><a href="@pathtopage(docs/fns/is_private)">is_private</a></li>
						<li><a href="@pathtopage(docs/fns/item)">item</a></li> <br>

						<li><a href="@pathtopage(docs/fns/join)">join</a></li>
						<li><a href="@pathtopage(docs/fns/jsinclude)">jsinclude</a></li> <br>

						<li><a href="@pathtopage(docs/fns/layer)">layer</a></li>
						<li><a href="@pathtopage(docs/fns/link)">link</a></li>
						<li><a href="@pathtopage(docs/fns/lolcat)">lolcat</a></li>
						<li><a href="@pathtofile(site/docs/fns/lolcat.off.html)">lolcat.off</a></li>
						<li><a href="@pathtofile(site/docs/fns/lolcat.on.html)">lolcat.on</a></li>
						<li><a href="@pathtopage(docs/fns/lst)">lst</a></li>
						<li><a href="@pathtopage(docs/fns/lua)">lua</a></li>
						<li><a href="@pathtopage(docs/fns/lua_addnsmfns)">lua_addnsmfns</a></li>
						<li><a href="@pathtopage(docs/fns/lua_getglobal)">lua_getglobal</a></li>
						<li><a href="@pathtopage(docs/fns/lua_gettop)">lua_gettop</a></li>
						<li><a href="@pathtopage(docs/fns/lua_pop)">lua_pop</a></li>
						<li><a href="@pathtopage(docs/fns/lua_pushlightuserdata)">lua_pushlightuserdata</a></li>
						<li><a href="@pathtopage(docs/fns/lua_pushnumber)">lua_pushnumber</a></li>
						<li><a href="@pathtopage(docs/fns/lua_pushstring)">lua_pushstring</a></li>
						<li><a href="@pathtopage(docs/fns/lua_remove)">lua_remove</a></li>
						<li><a href="@pathtopage(docs/fns/lua_setglobal)">lua_setglobal</a></li>
						<li><a href="@pathtopage(docs/fns/lua_tonumber)">lua_tonumber</a></li>
						<li><a href="@pathtopage(docs/fns/lua_tostring)">lua_tostring</a></li> <br>

						<li><a href="@pathtopage(docs/fns/mve)">mve</a></li> <br>

						<li><a href="@pathtopage(docs/fns/n++)">n++</a></li>
						<li><a href="@pathtopage(docs/fns/nsm_lang)">nsm_lang</a></li>
						<li><a href="@pathtopage(docs/fns/nsm_mode)">nsm_mode</a></li> <br>

						<li><a href="@pathtopage(docs/fns/paginate)">paginate</a></li>
						<li><a href="@pathtofile('site/docs/fns/paginate.no_items_per_page.html')">paginate.no_items_per_page</a></li>
						<li><a href="@pathtofile('site/docs/fns/paginate.separator.html')">paginate.separator</a></li>
						<li><a href="@pathtofile('site/docs/fns/paginate.template.html')">paginate.template</a></li>
						<li><a href="@pathtopage(docs/fns/parse)">parse</a></li>
						<li><a href="@pathtopage(docs/fns/pathto)">pathto</a></li>
						<li><a href="@pathtopage(docs/fns/pathtofile)">pathtofile</a></li>
						<li><a href="@pathtopage(docs/fns/pathtopage)">pathtopage</a></li>
						<li><a href="@pathtopage(docs/fns/poke)">poke</a></li>
						<li><a href="@pathtopage(docs/fns/precision)">precision</a></li>
						<li><a href="@pathtopage(docs/fns/private)">private</a></li>
						<li><a href="@pathtopage(docs/fns/pwd)">pwd</a></li> <br>

						<li><a href="@pathtopage(docs/fns/quit)">quit</a></li>
						<li><a href="@pathtopage(docs/fns/quote)">quote</a></li> <br>

						<li><a href="@pathtopage(docs/fns/read)">read</a></li>
						<li><a href="@pathtopage(docs/fns/refresh_completions)">refresh_completions</a></li>
						<li><a href="@pathtopage(docs/fns/replace_all)">replace_all</a></li>
						<li><a href="@pathtopage(docs/fns/return)">return</a></li>
						<li><a href="@pathtopage(docs/fns/rmv)">rmv</a></li> <br>

						<li><a href="@pathtopage(docs/fns/scope)">scope</a></li>
						<li><a href="@pathtopage(docs/fns/script)">script</a></li>
						<li><a href="@pathtopage(docs/fns/size)">size</a></li>
						<li><a href="@pathtopage(docs/fns/struct)">struct</a></li>
						<li><a href="@pathtopage(docs/fns/substr)">substr</a></li>
						<li><a href="@pathtopage(docs/fns/system)">sys</a></li>
						<li><a href="@pathtopage(docs/fns/system)">system</a></li> <br>

						<li><a href="@pathtopage(docs/fns/typeof)">typeof</a></li> <br>

						<li><a href="@pathtopage(docs/fns/unquote)">unquote</a></li> <br>

						<li><a href="@pathtopage(docs/fns/valid_type)">valid_type</a></li> <br>

						<li><a href="@pathtopage(docs/fns/warning)">warning</a></li>
						<li><a href="@pathtopage(docs/fns/while)">while</a></li>
						<li><a href="@pathtopage(docs/fns/write)">write</a></li>
					</ul>
				</div>
			</div>
		</section>
	</div>
</section>
