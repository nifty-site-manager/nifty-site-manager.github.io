<!-- Main -->
<section id="main" class="wrapper style2">
	<div class="title">Scripts</div>
	<div class="container">
		<!-- Features -->
		<section id="features">
			<header class="style1">
				<h2>Pre/Post Build/Serve Scripts</h2>
			</header>

			<!-- Image -->
			<center>
				<img src="@pathtofile(site/images/scripts.png)" alt="servers and scripts image" width=300 style="margin-bottom:40px">
			</center>

			<div class="content">
				<p>
					Nift has support for you to optionally add in pre/post build/serve scripts to your websites. Just a few of the things this can be useful for includes integrating with <a href="https://webpack.js.org/">webpack</a>, <a href="https://babeljs.io/">Babel</a>, <a href="https://sass-lang.com/">SASS</a>, <a href="https://gruntjs.com/">Grunt</a>, Python webserver, <a href="https://www.npmjs.com/package/live-server">Live Server</a>, <a href="http://livereload.com/">Live Reload</a>, etc.. You can use any scripting or programming language you want, eg. batch, bash shell, C/C++, C#, fish, go, Haskell, Java, Javascript, Objective-C, Perl, PHP, Python, Ruby, Swift, Zsh shell and many more.
				</p>

				<p>
					<b>Note:</b> Make sure your scripts have executable permissions, otherwise Nift will be unable to run them and should throw a build error.
				</p>

				<p>
					Website-wide scripts should reside in the project root directory in a file to be named as follows:
<div align="center" style="margin-top:-30px; margin-bottom:10px">
<pre class="inline">
pre-build.scripts
post-build.scripts
pre-build-all.scripts
post-build-all.scripts
pre-build-updated.scripts
post-build-updated.scripts
pre-serve.scripts
post-serve.scripts
</pre>
</div>

					It should be reasonably self-explanatory what each will do, though note the pre-build and post-build scripts are run before or after each of the Nift commands <mono>build</mono>, <mono>build-all</mono>, <mono>build-updated</mono>. Each line should have a single script, though you can leave lines blank and any line starting with # will be treated as a comment.
				</p>

				<p>
					An example <mono>pre-build.scripts</mono> file is below:
<div align="center" style="margin-top:-30px; margin-bottom:10px">
<pre class="prettyprint inline">
#scripts to run before building pages
./"test script.py"

./"test.py"
./test.py

python "test this.py"
python 'test this.py'

curl -sS "https://pastebin.com/raw/1kYKafED"
</pre>
</div>
				</p>

				<p>
					Page specific scripts should reside in the same directory as the content file for the page in a file to be named as follows:
<div align="center" style="margin-top:-30px; margin-bottom:10px">
<pre class="prettyprint inline">
pagename.pre-build.scripts
pagename.post-build.scripts
</pre>
</div>

					<b>Note:</b> Scripts are run from the project root directory.
				</p>

				<p>
					Each line should have a single script, though you can leave lines blank and any line starting with # will be treated as a comment.
				</p>

			</div>
		</section>
	</div>
</section>
